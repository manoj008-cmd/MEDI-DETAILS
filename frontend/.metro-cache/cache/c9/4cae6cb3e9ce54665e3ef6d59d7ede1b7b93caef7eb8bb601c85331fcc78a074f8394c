{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":45},"end":{"line":2,"column":69,"index":114}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Alert","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"PEUC6jrQVoAGZ2qYkvimljMOyJI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _s = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useMedicines = useMedicines;\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _reactNativeWebDistExportsAlert = require(_dependencyMap[3], \"react-native-web/dist/exports/Alert\");\n  var Alert = _interopDefault(_reactNativeWebDistExportsAlert);\n  const API_URL = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL + '/api';\n  function useMedicines() {\n    _s();\n    const [medicines, setMedicines] = (0, _react.useState)([]);\n    const [loading, setLoading] = (0, _react.useState)(false);\n    const getAuthHeaders = async () => {\n      const token = await AsyncStorage.default.getItem('auth_token');\n      return {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      };\n    };\n    const fetchMedicines = async () => {\n      try {\n        setLoading(true);\n        const headers = await getAuthHeaders();\n        const response = await fetch(`${API_URL}/medicines`, {\n          headers\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setMedicines(data);\n        } else {\n          console.error('Failed to fetch medicines');\n        }\n      } catch (error) {\n        console.error('Error fetching medicines:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    const addMedicine = async medicineData => {\n      try {\n        const headers = await getAuthHeaders();\n        const response = await fetch(`${API_URL}/medicines`, {\n          method: 'POST',\n          headers,\n          body: JSON.stringify(medicineData)\n        });\n        if (response.ok) {\n          const newMedicine = await response.json();\n          setMedicines(prev => [...prev, newMedicine]);\n          return true;\n        } else {\n          const error = await response.json();\n          Alert.default.alert('Error', error.detail || 'Failed to add medicine');\n          return false;\n        }\n      } catch (error) {\n        console.error('Error adding medicine:', error);\n        Alert.default.alert('Error', 'Network error. Please try again.');\n        return false;\n      }\n    };\n    const updateMedicine = async (id, medicineData) => {\n      try {\n        const headers = await getAuthHeaders();\n        const response = await fetch(`${API_URL}/medicines/${id}`, {\n          method: 'PUT',\n          headers,\n          body: JSON.stringify(medicineData)\n        });\n        if (response.ok) {\n          const updatedMedicine = await response.json();\n          setMedicines(prev => prev.map(med => med.id === id ? updatedMedicine : med));\n          return true;\n        } else {\n          const error = await response.json();\n          Alert.default.alert('Error', error.detail || 'Failed to update medicine');\n          return false;\n        }\n      } catch (error) {\n        console.error('Error updating medicine:', error);\n        Alert.default.alert('Error', 'Network error. Please try again.');\n        return false;\n      }\n    };\n    const deleteMedicine = async id => {\n      try {\n        const headers = await getAuthHeaders();\n        const response = await fetch(`${API_URL}/medicines/${id}`, {\n          method: 'DELETE',\n          headers\n        });\n        if (response.ok) {\n          setMedicines(prev => prev.filter(med => med.id !== id));\n          return true;\n        } else {\n          const error = await response.json();\n          Alert.default.alert('Error', error.detail || 'Failed to delete medicine');\n          return false;\n        }\n      } catch (error) {\n        console.error('Error deleting medicine:', error);\n        Alert.default.alert('Error', 'Network error. Please try again.');\n        return false;\n      }\n    };\n    (0, _react.useEffect)(() => {\n      fetchMedicines();\n    }, []);\n    return {\n      medicines,\n      loading,\n      addMedicine,\n      updateMedicine,\n      deleteMedicine,\n      refetch: fetchMedicines\n    };\n  }\n  _s(useMedicines, \"O5dJs+8DKhz0pCOBvUEj0T9Rxno=\");\n});","lineCount":131,"map":[[13,2,22,0,"exports"],[13,9,22,0],[13,10,22,0,"useMedicines"],[13,22,22,0],[13,25,22,0,"useMedicines"],[13,37,22,0],[14,2,140,1],[14,6,140,1,"_expoVirtualEnv"],[14,21,140,1],[14,24,140,1,"require"],[14,31,140,1],[14,32,140,1,"_dependencyMap"],[14,46,140,1],[15,2,1,0],[15,6,1,0,"_react"],[15,12,1,0],[15,15,1,0,"require"],[15,22,1,0],[15,23,1,0,"_dependencyMap"],[15,37,1,0],[16,2,2,0],[16,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[16,42,2,0],[16,45,2,0,"require"],[16,52,2,0],[16,53,2,0,"_dependencyMap"],[16,67,2,0],[17,2,2,0],[17,6,2,0,"AsyncStorage"],[17,18,2,0],[17,21,2,0,"_interopDefault"],[17,36,2,0],[17,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[17,73,2,0],[18,2,2,69],[18,6,2,69,"_reactNativeWebDistExportsAlert"],[18,37,2,69],[18,40,2,69,"require"],[18,47,2,69],[18,48,2,69,"_dependencyMap"],[18,62,2,69],[19,2,2,69],[19,6,2,69,"Alert"],[19,11,2,69],[19,14,2,69,"_interopDefault"],[19,29,2,69],[19,30,2,69,"_reactNativeWebDistExportsAlert"],[19,61,2,69],[20,2,20,0],[20,8,20,6,"API_URL"],[20,15,20,13],[20,18,20,16,"_expoVirtualEnv"],[20,33,20,16],[20,34,20,16,"env"],[20,37,20,16],[20,38,20,16,"EXPO_PUBLIC_BACKEND_URL"],[20,61,20,16],[20,64,20,54],[20,70,20,60],[21,2,22,7],[21,11,22,16,"useMedicines"],[21,23,22,28,"useMedicines"],[21,24,22,28],[21,26,22,31],[22,4,22,31,"_s"],[22,6,22,31],[23,4,23,2],[23,10,23,8],[23,11,23,9,"medicines"],[23,20,23,18],[23,22,23,20,"setMedicines"],[23,34,23,32],[23,35,23,33],[23,38,23,36],[23,42,23,36,"useState"],[23,48,23,44],[23,49,23,44,"useState"],[23,57,23,44],[23,59,23,57],[23,61,23,59],[23,62,23,60],[24,4,24,2],[24,10,24,8],[24,11,24,9,"loading"],[24,18,24,16],[24,20,24,18,"setLoading"],[24,30,24,28],[24,31,24,29],[24,34,24,32],[24,38,24,32,"useState"],[24,44,24,40],[24,45,24,40,"useState"],[24,53,24,40],[24,55,24,41],[24,60,24,46],[24,61,24,47],[25,4,26,2],[25,10,26,8,"getAuthHeaders"],[25,24,26,22],[25,27,26,25],[25,33,26,25,"getAuthHeaders"],[25,34,26,25],[25,39,26,37],[26,6,27,4],[26,12,27,10,"token"],[26,17,27,15],[26,20,27,18],[26,26,27,24,"AsyncStorage"],[26,38,27,36],[26,39,27,36,"default"],[26,46,27,36],[26,47,27,37,"getItem"],[26,54,27,44],[26,55,27,45],[26,67,27,57],[26,68,27,58],[27,6,28,4],[27,13,28,11],[28,8,29,6],[28,22,29,20],[28,24,29,22],[28,42,29,40],[29,8,30,6],[29,23,30,21],[29,25,30,23],[29,35,30,33,"token"],[29,40,30,38],[30,6,31,4],[30,7,31,5],[31,4,32,2],[31,5,32,3],[32,4,34,2],[32,10,34,8,"fetchMedicines"],[32,24,34,22],[32,27,34,25],[32,33,34,25,"fetchMedicines"],[32,34,34,25],[32,39,34,37],[33,6,35,4],[33,10,35,8],[34,8,36,6,"setLoading"],[34,18,36,16],[34,19,36,17],[34,23,36,21],[34,24,36,22],[35,8,37,6],[35,14,37,12,"headers"],[35,21,37,19],[35,24,37,22],[35,30,37,28,"getAuthHeaders"],[35,44,37,42],[35,45,37,43],[35,46,37,44],[36,8,38,6],[36,14,38,12,"response"],[36,22,38,20],[36,25,38,23],[36,31,38,29,"fetch"],[36,36,38,34],[36,37,38,35],[36,40,38,38,"API_URL"],[36,47,38,45],[36,59,38,57],[36,61,38,59],[37,10,38,61,"headers"],[38,8,38,69],[38,9,38,70],[38,10,38,71],[39,8,40,6],[39,12,40,10,"response"],[39,20,40,18],[39,21,40,19,"ok"],[39,23,40,21],[39,25,40,23],[40,10,41,8],[40,16,41,14,"data"],[40,20,41,18],[40,23,41,21],[40,29,41,27,"response"],[40,37,41,35],[40,38,41,36,"json"],[40,42,41,40],[40,43,41,41],[40,44,41,42],[41,10,42,8,"setMedicines"],[41,22,42,20],[41,23,42,21,"data"],[41,27,42,25],[41,28,42,26],[42,8,43,6],[42,9,43,7],[42,15,43,13],[43,10,44,8,"console"],[43,17,44,15],[43,18,44,16,"error"],[43,23,44,21],[43,24,44,22],[43,51,44,49],[43,52,44,50],[44,8,45,6],[45,6,46,4],[45,7,46,5],[45,8,46,6],[45,15,46,13,"error"],[45,20,46,18],[45,22,46,20],[46,8,47,6,"console"],[46,15,47,13],[46,16,47,14,"error"],[46,21,47,19],[46,22,47,20],[46,49,47,47],[46,51,47,49,"error"],[46,56,47,54],[46,57,47,55],[47,6,48,4],[47,7,48,5],[47,16,48,14],[48,8,49,6,"setLoading"],[48,18,49,16],[48,19,49,17],[48,24,49,22],[48,25,49,23],[49,6,50,4],[50,4,51,2],[50,5,51,3],[51,4,53,2],[51,10,53,8,"addMedicine"],[51,21,53,19],[51,24,53,22],[51,30,53,29,"medicineData"],[51,42,53,93],[51,46,53,98],[52,6,54,4],[52,10,54,8],[53,8,55,6],[53,14,55,12,"headers"],[53,21,55,19],[53,24,55,22],[53,30,55,28,"getAuthHeaders"],[53,44,55,42],[53,45,55,43],[53,46,55,44],[54,8,56,6],[54,14,56,12,"response"],[54,22,56,20],[54,25,56,23],[54,31,56,29,"fetch"],[54,36,56,34],[54,37,56,35],[54,40,56,38,"API_URL"],[54,47,56,45],[54,59,56,57],[54,61,56,59],[55,10,57,8,"method"],[55,16,57,14],[55,18,57,16],[55,24,57,22],[56,10,58,8,"headers"],[56,17,58,15],[57,10,59,8,"body"],[57,14,59,12],[57,16,59,14,"JSON"],[57,20,59,18],[57,21,59,19,"stringify"],[57,30,59,28],[57,31,59,29,"medicineData"],[57,43,59,41],[58,8,60,6],[58,9,60,7],[58,10,60,8],[59,8,62,6],[59,12,62,10,"response"],[59,20,62,18],[59,21,62,19,"ok"],[59,23,62,21],[59,25,62,23],[60,10,63,8],[60,16,63,14,"newMedicine"],[60,27,63,25],[60,30,63,28],[60,36,63,34,"response"],[60,44,63,42],[60,45,63,43,"json"],[60,49,63,47],[60,50,63,48],[60,51,63,49],[61,10,64,8,"setMedicines"],[61,22,64,20],[61,23,64,21,"prev"],[61,27,64,25],[61,31,64,29],[61,32,64,30],[61,35,64,33,"prev"],[61,39,64,37],[61,41,64,39,"newMedicine"],[61,52,64,50],[61,53,64,51],[61,54,64,52],[62,10,65,8],[62,17,65,15],[62,21,65,19],[63,8,66,6],[63,9,66,7],[63,15,66,13],[64,10,67,8],[64,16,67,14,"error"],[64,21,67,19],[64,24,67,22],[64,30,67,28,"response"],[64,38,67,36],[64,39,67,37,"json"],[64,43,67,41],[64,44,67,42],[64,45,67,43],[65,10,68,8,"Alert"],[65,15,68,13],[65,16,68,13,"default"],[65,23,68,13],[65,24,68,14,"alert"],[65,29,68,19],[65,30,68,20],[65,37,68,27],[65,39,68,29,"error"],[65,44,68,34],[65,45,68,35,"detail"],[65,51,68,41],[65,55,68,45],[65,79,68,69],[65,80,68,70],[66,10,69,8],[66,17,69,15],[66,22,69,20],[67,8,70,6],[68,6,71,4],[68,7,71,5],[68,8,71,6],[68,15,71,13,"error"],[68,20,71,18],[68,22,71,20],[69,8,72,6,"console"],[69,15,72,13],[69,16,72,14,"error"],[69,21,72,19],[69,22,72,20],[69,46,72,44],[69,48,72,46,"error"],[69,53,72,51],[69,54,72,52],[70,8,73,6,"Alert"],[70,13,73,11],[70,14,73,11,"default"],[70,21,73,11],[70,22,73,12,"alert"],[70,27,73,17],[70,28,73,18],[70,35,73,25],[70,37,73,27],[70,71,73,61],[70,72,73,62],[71,8,74,6],[71,15,74,13],[71,20,74,18],[72,6,75,4],[73,4,76,2],[73,5,76,3],[74,4,78,2],[74,10,78,8,"updateMedicine"],[74,24,78,22],[74,27,78,25],[74,33,78,25,"updateMedicine"],[74,34,78,32,"id"],[74,36,78,42],[74,38,78,44,"medicineData"],[74,50,78,75],[74,55,78,80],[75,6,79,4],[75,10,79,8],[76,8,80,6],[76,14,80,12,"headers"],[76,21,80,19],[76,24,80,22],[76,30,80,28,"getAuthHeaders"],[76,44,80,42],[76,45,80,43],[76,46,80,44],[77,8,81,6],[77,14,81,12,"response"],[77,22,81,20],[77,25,81,23],[77,31,81,29,"fetch"],[77,36,81,34],[77,37,81,35],[77,40,81,38,"API_URL"],[77,47,81,45],[77,61,81,59,"id"],[77,63,81,61],[77,65,81,63],[77,67,81,65],[78,10,82,8,"method"],[78,16,82,14],[78,18,82,16],[78,23,82,21],[79,10,83,8,"headers"],[79,17,83,15],[80,10,84,8,"body"],[80,14,84,12],[80,16,84,14,"JSON"],[80,20,84,18],[80,21,84,19,"stringify"],[80,30,84,28],[80,31,84,29,"medicineData"],[80,43,84,41],[81,8,85,6],[81,9,85,7],[81,10,85,8],[82,8,87,6],[82,12,87,10,"response"],[82,20,87,18],[82,21,87,19,"ok"],[82,23,87,21],[82,25,87,23],[83,10,88,8],[83,16,88,14,"updatedMedicine"],[83,31,88,29],[83,34,88,32],[83,40,88,38,"response"],[83,48,88,46],[83,49,88,47,"json"],[83,53,88,51],[83,54,88,52],[83,55,88,53],[84,10,89,8,"setMedicines"],[84,22,89,20],[84,23,89,21,"prev"],[84,27,89,25],[84,31,90,10,"prev"],[84,35,90,14],[84,36,90,15,"map"],[84,39,90,18],[84,40,90,19,"med"],[84,43,90,22],[84,47,90,26,"med"],[84,50,90,29],[84,51,90,30,"id"],[84,53,90,32],[84,58,90,37,"id"],[84,60,90,39],[84,63,90,42,"updatedMedicine"],[84,78,90,57],[84,81,90,60,"med"],[84,84,90,63],[84,85,91,8],[84,86,91,9],[85,10,92,8],[85,17,92,15],[85,21,92,19],[86,8,93,6],[86,9,93,7],[86,15,93,13],[87,10,94,8],[87,16,94,14,"error"],[87,21,94,19],[87,24,94,22],[87,30,94,28,"response"],[87,38,94,36],[87,39,94,37,"json"],[87,43,94,41],[87,44,94,42],[87,45,94,43],[88,10,95,8,"Alert"],[88,15,95,13],[88,16,95,13,"default"],[88,23,95,13],[88,24,95,14,"alert"],[88,29,95,19],[88,30,95,20],[88,37,95,27],[88,39,95,29,"error"],[88,44,95,34],[88,45,95,35,"detail"],[88,51,95,41],[88,55,95,45],[88,82,95,72],[88,83,95,73],[89,10,96,8],[89,17,96,15],[89,22,96,20],[90,8,97,6],[91,6,98,4],[91,7,98,5],[91,8,98,6],[91,15,98,13,"error"],[91,20,98,18],[91,22,98,20],[92,8,99,6,"console"],[92,15,99,13],[92,16,99,14,"error"],[92,21,99,19],[92,22,99,20],[92,48,99,46],[92,50,99,48,"error"],[92,55,99,53],[92,56,99,54],[93,8,100,6,"Alert"],[93,13,100,11],[93,14,100,11,"default"],[93,21,100,11],[93,22,100,12,"alert"],[93,27,100,17],[93,28,100,18],[93,35,100,25],[93,37,100,27],[93,71,100,61],[93,72,100,62],[94,8,101,6],[94,15,101,13],[94,20,101,18],[95,6,102,4],[96,4,103,2],[96,5,103,3],[97,4,105,2],[97,10,105,8,"deleteMedicine"],[97,24,105,22],[97,27,105,25],[97,33,105,32,"id"],[97,35,105,42],[97,39,105,47],[98,6,106,4],[98,10,106,8],[99,8,107,6],[99,14,107,12,"headers"],[99,21,107,19],[99,24,107,22],[99,30,107,28,"getAuthHeaders"],[99,44,107,42],[99,45,107,43],[99,46,107,44],[100,8,108,6],[100,14,108,12,"response"],[100,22,108,20],[100,25,108,23],[100,31,108,29,"fetch"],[100,36,108,34],[100,37,108,35],[100,40,108,38,"API_URL"],[100,47,108,45],[100,61,108,59,"id"],[100,63,108,61],[100,65,108,63],[100,67,108,65],[101,10,109,8,"method"],[101,16,109,14],[101,18,109,16],[101,26,109,24],[102,10,110,8,"headers"],[103,8,111,6],[103,9,111,7],[103,10,111,8],[104,8,113,6],[104,12,113,10,"response"],[104,20,113,18],[104,21,113,19,"ok"],[104,23,113,21],[104,25,113,23],[105,10,114,8,"setMedicines"],[105,22,114,20],[105,23,114,21,"prev"],[105,27,114,25],[105,31,114,29,"prev"],[105,35,114,33],[105,36,114,34,"filter"],[105,42,114,40],[105,43,114,41,"med"],[105,46,114,44],[105,50,114,48,"med"],[105,53,114,51],[105,54,114,52,"id"],[105,56,114,54],[105,61,114,59,"id"],[105,63,114,61],[105,64,114,62],[105,65,114,63],[106,10,115,8],[106,17,115,15],[106,21,115,19],[107,8,116,6],[107,9,116,7],[107,15,116,13],[108,10,117,8],[108,16,117,14,"error"],[108,21,117,19],[108,24,117,22],[108,30,117,28,"response"],[108,38,117,36],[108,39,117,37,"json"],[108,43,117,41],[108,44,117,42],[108,45,117,43],[109,10,118,8,"Alert"],[109,15,118,13],[109,16,118,13,"default"],[109,23,118,13],[109,24,118,14,"alert"],[109,29,118,19],[109,30,118,20],[109,37,118,27],[109,39,118,29,"error"],[109,44,118,34],[109,45,118,35,"detail"],[109,51,118,41],[109,55,118,45],[109,82,118,72],[109,83,118,73],[110,10,119,8],[110,17,119,15],[110,22,119,20],[111,8,120,6],[112,6,121,4],[112,7,121,5],[112,8,121,6],[112,15,121,13,"error"],[112,20,121,18],[112,22,121,20],[113,8,122,6,"console"],[113,15,122,13],[113,16,122,14,"error"],[113,21,122,19],[113,22,122,20],[113,48,122,46],[113,50,122,48,"error"],[113,55,122,53],[113,56,122,54],[114,8,123,6,"Alert"],[114,13,123,11],[114,14,123,11,"default"],[114,21,123,11],[114,22,123,12,"alert"],[114,27,123,17],[114,28,123,18],[114,35,123,25],[114,37,123,27],[114,71,123,61],[114,72,123,62],[115,8,124,6],[115,15,124,13],[115,20,124,18],[116,6,125,4],[117,4,126,2],[117,5,126,3],[118,4,128,2],[118,8,128,2,"useEffect"],[118,14,128,11],[118,15,128,11,"useEffect"],[118,24,128,11],[118,26,128,12],[118,32,128,18],[119,6,129,4,"fetchMedicines"],[119,20,129,18],[119,21,129,19],[119,22,129,20],[120,4,130,2],[120,5,130,3],[120,7,130,5],[120,9,130,7],[120,10,130,8],[121,4,132,2],[121,11,132,9],[122,6,133,4,"medicines"],[122,15,133,13],[123,6,134,4,"loading"],[123,13,134,11],[124,6,135,4,"addMedicine"],[124,17,135,15],[125,6,136,4,"updateMedicine"],[125,20,136,18],[126,6,137,4,"deleteMedicine"],[126,20,137,18],[127,6,138,4,"refetch"],[127,13,138,11],[127,15,138,13,"fetchMedicines"],[128,4,139,2],[128,5,139,3],[129,2,140,0],[130,2,140,1,"_s"],[130,4,140,1],[130,5,22,16,"useMedicines"],[130,17,22,28],[131,0,22,28],[131,3]],"functionMap":{"names":["<global>","useMedicines","getAuthHeaders","fetchMedicines","addMedicine","setMedicines$argument_0","updateMedicine","prev.map$argument_0","deleteMedicine","prev.filter$argument_0","useEffect$argument_0"],"mappings":"AAA;OCqB;yBCI;GDM;yBEE;GFiB;sBGE;qBCW,8BD;GHY;yBKE;qBDW;mBEC,4CF,CC;GLa;yBOE;qBHS,oBI,oBJ,CG;GPY;YSE;GTE;CDU"},"hasCjsExports":false},"type":"js/module"}]}